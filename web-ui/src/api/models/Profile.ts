/* tslint:disable */
/* eslint-disable */
/**
 * JobCounselor API
 * Minimal API surface for the JobCounselor backend
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Skill } from './Skill';
import {
    SkillFromJSON,
    SkillFromJSONTyped,
    SkillToJSON,
    SkillToJSONTyped,
} from './Skill';
import type { Language } from './Language';
import {
    LanguageFromJSON,
    LanguageFromJSONTyped,
    LanguageToJSON,
    LanguageToJSONTyped,
} from './Language';
import type { EducationItem } from './EducationItem';
import {
    EducationItemFromJSON,
    EducationItemFromJSONTyped,
    EducationItemToJSON,
    EducationItemToJSONTyped,
} from './EducationItem';
import type { ExperienceItem } from './ExperienceItem';
import {
    ExperienceItemFromJSON,
    ExperienceItemFromJSONTyped,
    ExperienceItemToJSON,
    ExperienceItemToJSONTyped,
} from './ExperienceItem';

/**
 * 
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    fullName?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    summary?: string;
    /**
     * 
     * @type {Array<Skill>}
     * @memberof Profile
     */
    skills?: Array<Skill>;
    /**
     * 
     * @type {Array<EducationItem>}
     * @memberof Profile
     */
    education?: Array<EducationItem>;
    /**
     * 
     * @type {Array<ExperienceItem>}
     * @memberof Profile
     */
    experience?: Array<ExperienceItem>;
    /**
     * 
     * @type {Array<Language>}
     * @memberof Profile
     */
    languages?: Array<Language>;
}

/**
 * Check if a given object implements the Profile interface.
 */
export function instanceOfProfile(value: object): value is Profile {
    return true;
}

export function ProfileFromJSON(json: any): Profile {
    return ProfileFromJSONTyped(json, false);
}

export function ProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): Profile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'skills': json['skills'] == null ? undefined : ((json['skills'] as Array<any>).map(SkillFromJSON)),
        'education': json['education'] == null ? undefined : ((json['education'] as Array<any>).map(EducationItemFromJSON)),
        'experience': json['experience'] == null ? undefined : ((json['experience'] as Array<any>).map(ExperienceItemFromJSON)),
        'languages': json['languages'] == null ? undefined : ((json['languages'] as Array<any>).map(LanguageFromJSON)),
    };
}

export function ProfileToJSON(json: any): Profile {
    return ProfileToJSONTyped(json, false);
}

export function ProfileToJSONTyped(value?: Profile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fullName': value['fullName'],
        'email': value['email'],
        'phone': value['phone'],
        'summary': value['summary'],
        'skills': value['skills'] == null ? undefined : ((value['skills'] as Array<any>).map(SkillToJSON)),
        'education': value['education'] == null ? undefined : ((value['education'] as Array<any>).map(EducationItemToJSON)),
        'experience': value['experience'] == null ? undefined : ((value['experience'] as Array<any>).map(ExperienceItemToJSON)),
        'languages': value['languages'] == null ? undefined : ((value['languages'] as Array<any>).map(LanguageToJSON)),
    };
}

